// <auto-generated />
using System;
using FinancialRiskAnalysis.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinancialRiskAnalysis.Persistence.Contexts.Main.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20240610020348_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinancialRiskAnalysis.Domain.BusinessContract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BusinessContract", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a0dbc67d-c032-46b1-b4e4-372f1af5280d"),
                            CreateDate = new DateTime(2024, 6, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(5490),
                            Description = "1. İş anlaşması",
                            EndDate = new DateTime(2024, 7, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(5480),
                            Name = "İş Anlaşması 1",
                            StartDate = new DateTime(2024, 6, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(5480)
                        },
                        new
                        {
                            Id = new Guid("b13a2a50-9a66-4a01-91ec-9246ff3970c1"),
                            CreateDate = new DateTime(2024, 6, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(5490),
                            Description = "2. İş anlaşması",
                            EndDate = new DateTime(2024, 8, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(5490),
                            Name = "İş Anlaşması 2",
                            StartDate = new DateTime(2024, 6, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(5490)
                        },
                        new
                        {
                            Id = new Guid("5928bf0e-f501-4095-9d54-570a2196d59f"),
                            CreateDate = new DateTime(2024, 6, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(5490),
                            Description = "3. İş anlaşması",
                            EndDate = new DateTime(2024, 9, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(5490),
                            Name = "İş Anlaşması 3",
                            StartDate = new DateTime(2024, 6, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(5490)
                        },
                        new
                        {
                            Id = new Guid("e6922d3a-b69b-43d0-90f4-ec34de7b268d"),
                            CreateDate = new DateTime(2024, 6, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(5500),
                            Description = "4. İş anlaşması",
                            EndDate = new DateTime(2024, 7, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(5500),
                            Name = "İş Anlaşması 4",
                            StartDate = new DateTime(2024, 6, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(5500)
                        });
                });

            modelBuilder.Entity("FinancialRiskAnalysis.Domain.BusinessTopic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PartnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessContractId");

                    b.HasIndex("PartnerId");

                    b.ToTable("BusinessTopic", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c541a1cf-90d3-48d9-8fbc-93d42a984cff"),
                            BusinessContractId = new Guid("a0dbc67d-c032-46b1-b4e4-372f1af5280d"),
                            CreateDate = new DateTime(2024, 6, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(6390),
                            Description = "1. İş Konusu",
                            PartnerId = new Guid("5b5aba2c-068c-4850-86ab-a4e2eca325ed"),
                            Title = "İş Konusu 1"
                        },
                        new
                        {
                            Id = new Guid("56c98e67-275d-41fb-9662-cd557f3a4449"),
                            BusinessContractId = new Guid("b13a2a50-9a66-4a01-91ec-9246ff3970c1"),
                            CreateDate = new DateTime(2024, 6, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(6400),
                            Description = "2. İş Konusu",
                            PartnerId = new Guid("06500dc8-f77b-417d-bb5d-0d6ac7e3661a"),
                            Title = "İş Konusu 2"
                        },
                        new
                        {
                            Id = new Guid("3e00f72c-6b01-41dd-85de-0d7876e36dd4"),
                            BusinessContractId = new Guid("5928bf0e-f501-4095-9d54-570a2196d59f"),
                            CreateDate = new DateTime(2024, 6, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(6400),
                            Description = "3. İş Konusu",
                            PartnerId = new Guid("284e5ea4-32da-4643-84b9-b7a889f9fe78"),
                            Title = "İş Konusu 3"
                        },
                        new
                        {
                            Id = new Guid("73085f06-9b59-444c-bc73-559501584122"),
                            BusinessContractId = new Guid("e6922d3a-b69b-43d0-90f4-ec34de7b268d"),
                            CreateDate = new DateTime(2024, 6, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(6400),
                            Description = "4. İş Konusu",
                            PartnerId = new Guid("83975a8c-637d-4cd8-b77e-1493f80a76cb"),
                            Title = "İş Konusu 4"
                        });
                });

            modelBuilder.Entity("FinancialRiskAnalysis.Domain.Partner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Partner", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("5b5aba2c-068c-4850-86ab-a4e2eca325ed"),
                            CreateDate = new DateTime(2024, 6, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(6910),
                            Name = "İş Ortağı 1"
                        },
                        new
                        {
                            Id = new Guid("06500dc8-f77b-417d-bb5d-0d6ac7e3661a"),
                            CreateDate = new DateTime(2024, 6, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(6920),
                            Name = "İş Ortağı 2"
                        },
                        new
                        {
                            Id = new Guid("284e5ea4-32da-4643-84b9-b7a889f9fe78"),
                            CreateDate = new DateTime(2024, 6, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(6920),
                            Name = "İş Ortağı 3"
                        },
                        new
                        {
                            Id = new Guid("83975a8c-637d-4cd8-b77e-1493f80a76cb"),
                            CreateDate = new DateTime(2024, 6, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(6920),
                            Name = "İş Ortağı 4"
                        });
                });

            modelBuilder.Entity("FinancialRiskAnalysis.Domain.PartnerContract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BusinessContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PartnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessContractId");

                    b.HasIndex("PartnerId");

                    b.ToTable("PartnerContract", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("791f5e69-124d-4cf3-9027-ac5532c9c59a"),
                            BusinessContractId = new Guid("a0dbc67d-c032-46b1-b4e4-372f1af5280d"),
                            CreateDate = new DateTime(2024, 6, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(7270),
                            PartnerId = new Guid("5b5aba2c-068c-4850-86ab-a4e2eca325ed")
                        },
                        new
                        {
                            Id = new Guid("488306db-7e95-4291-932b-e960f9217da1"),
                            BusinessContractId = new Guid("b13a2a50-9a66-4a01-91ec-9246ff3970c1"),
                            CreateDate = new DateTime(2024, 6, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(7270),
                            PartnerId = new Guid("06500dc8-f77b-417d-bb5d-0d6ac7e3661a")
                        },
                        new
                        {
                            Id = new Guid("5a7cf61b-176f-430f-8c6f-eaca016234af"),
                            BusinessContractId = new Guid("5928bf0e-f501-4095-9d54-570a2196d59f"),
                            CreateDate = new DateTime(2024, 6, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(7280),
                            PartnerId = new Guid("284e5ea4-32da-4643-84b9-b7a889f9fe78")
                        },
                        new
                        {
                            Id = new Guid("25648d6a-643d-4877-87f6-daede8401870"),
                            BusinessContractId = new Guid("e6922d3a-b69b-43d0-90f4-ec34de7b268d"),
                            CreateDate = new DateTime(2024, 6, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(7280),
                            PartnerId = new Guid("83975a8c-637d-4cd8-b77e-1493f80a76cb")
                        });
                });

            modelBuilder.Entity("FinancialRiskAnalysis.Domain.RiskAnalysis", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AnalysisDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BusinessTopicId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("RiskScore")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessTopicId");

                    b.ToTable("RiskAnalysis", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("85015a94-693b-4418-a164-ff437599fe9e"),
                            AnalysisDate = new DateTime(2024, 6, 15, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(7530),
                            BusinessTopicId = new Guid("c541a1cf-90d3-48d9-8fbc-93d42a984cff"),
                            CreateDate = new DateTime(2024, 6, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(7530),
                            RiskScore = 15.800000000000001
                        },
                        new
                        {
                            Id = new Guid("ba175a89-0e8b-481a-aeba-32d7599a4afe"),
                            AnalysisDate = new DateTime(2024, 7, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(7530),
                            BusinessTopicId = new Guid("56c98e67-275d-41fb-9662-cd557f3a4449"),
                            CreateDate = new DateTime(2024, 6, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(7530),
                            RiskScore = 30.100000000000001
                        },
                        new
                        {
                            Id = new Guid("f4115479-0078-4f1d-8438-960315985f86"),
                            AnalysisDate = new DateTime(2024, 6, 13, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(7530),
                            BusinessTopicId = new Guid("3e00f72c-6b01-41dd-85de-0d7876e36dd4"),
                            CreateDate = new DateTime(2024, 6, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(7530),
                            RiskScore = 75.0
                        },
                        new
                        {
                            Id = new Guid("9263e450-a593-4506-8e19-b6ac0df0f0c8"),
                            AnalysisDate = new DateTime(2024, 6, 17, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(7540),
                            BusinessTopicId = new Guid("73085f06-9b59-444c-bc73-559501584122"),
                            CreateDate = new DateTime(2024, 6, 10, 2, 3, 48, 679, DateTimeKind.Utc).AddTicks(7540),
                            RiskScore = 53.399999999999999
                        });
                });

            modelBuilder.Entity("FinancialRiskAnalysis.Domain.BusinessTopic", b =>
                {
                    b.HasOne("FinancialRiskAnalysis.Domain.BusinessContract", "BusinessContract")
                        .WithMany("BusinessTopics")
                        .HasForeignKey("BusinessContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinancialRiskAnalysis.Domain.Partner", "Partner")
                        .WithMany("BusinessTopics")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessContract");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("FinancialRiskAnalysis.Domain.PartnerContract", b =>
                {
                    b.HasOne("FinancialRiskAnalysis.Domain.BusinessContract", "BusinessContract")
                        .WithMany("PartnerContracts")
                        .HasForeignKey("BusinessContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinancialRiskAnalysis.Domain.Partner", "Partner")
                        .WithMany("PartnerContracts")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessContract");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("FinancialRiskAnalysis.Domain.RiskAnalysis", b =>
                {
                    b.HasOne("FinancialRiskAnalysis.Domain.BusinessTopic", "BusinessTopic")
                        .WithMany("RiskAnalyses")
                        .HasForeignKey("BusinessTopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessTopic");
                });

            modelBuilder.Entity("FinancialRiskAnalysis.Domain.BusinessContract", b =>
                {
                    b.Navigation("BusinessTopics");

                    b.Navigation("PartnerContracts");
                });

            modelBuilder.Entity("FinancialRiskAnalysis.Domain.BusinessTopic", b =>
                {
                    b.Navigation("RiskAnalyses");
                });

            modelBuilder.Entity("FinancialRiskAnalysis.Domain.Partner", b =>
                {
                    b.Navigation("BusinessTopics");

                    b.Navigation("PartnerContracts");
                });
#pragma warning restore 612, 618
        }
    }
}
